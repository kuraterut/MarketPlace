apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "auth-service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "auth-service.name" . }}
    helm.sh/chart: {{ include "auth-service.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "auth-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge}}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable}}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "auth-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        {{- if .Values.global.imagePullSecrets }}
        {{- toYaml .Values.global.imagePullSecrets | nindent 8 }}
        {{- end }}
      containers:
        - name: auth-service
          image: "{{ .Values.image.repository}}:{{ .Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.containerPort}}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.global.springProfile }}
            - name: SPRING_DATASOURCE_URL
              value: {{ printf "jdbc:postgresql://%s:%s/%s" .Values.postgresql.host .Values.postgresql.port .Values.postgresql.database | quote }}
            - name: POSTGRES_HOST
              value: {{ .Values.postgresql.host }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.port | quote }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ include "auth-service.postgresSecretName" . }}
                  key: database
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "auth-service.postgresSecretName" . }}
                  key: username
            - name: SPRING_REDIS_HOST
              value: {{ .Values.keydb.host | quote }}
            - name: SPRING_REDIS_PORT
              value: "{{ .Values.keydb.port}}"
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "auth-service.keydbSecretName" . }}
                  key: password
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: {{ include "auth-service.kafkaBootstrap" . | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "auth-service.postgresSecretName" . }}
                  key: password
          resources:
            {{toYaml .Values.resources }}
          livenessProbe:
            httpGet:
              path: {{.Values.livenessProbe.path}}
              port: {{ .Values.service.containerPort}}
            initialDelaySeconds: {{.Values.livenessProbe.initialDelaySeconds}}
            periodSeconds: {{.Values.livenessProbe.periodSeconds}}
          readinessProbe:
            httpGet:
              path: {{.Values.readinessProbe.path}}
              port: {{ .Values.service.containerPort}}
              httpHeaders:
                - name: X-Readiness-Check
                  value: "true"
            initialDelaySeconds: {{.Values.readinessProbe.initialDelaySeconds}}
            periodSeconds: {{.Values.readinessProbe.periodSeconds}}
