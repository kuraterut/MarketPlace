server:
  port: 8083

spring:
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      key-prefix: "payment-service:"
      use-key-prefix: true
      cache-null-values: false
  data:
    redis:
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
      host: keydb-payment
      port: 6379
      timeout: 5000
  application:
    name: payment-service
  datasource:
    url: jdbc:postgresql://postgres-payment:5432/payment_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  liquibase:
    change-log: classpath:db/migration/changelog-master.xml
    enabled: true
  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: payment-consuming-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"
      isolation-level: read_committed


    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 2147483647
      properties:
        spring.json.add.type.headers=false:

management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    enable:
      http.server.requests: true
      tomcat: true
    tags:
      application: ${spring.application.name}



eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka

kafka-topics:
  payment-request: payment-request
  payment-result: payment-result
  user-registration: user-registration-topic

scheduling:
  process-payment-event-rate: 3000
  process-payment-result-rate: 3000

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.boot.actuate: DEBUG

#logging:
#  level:
#    org.springframework: DEBUG
