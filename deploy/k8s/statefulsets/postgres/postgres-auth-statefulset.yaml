apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-auth
spec:
  serviceName: postgres-auth-service-headless
  replicas: 3
  selector:
    matchLabels:
      app: postgres-auth
  template:
    metadata:
      labels:
        app: postgres-auth
    spec:
      securityContext:
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: SCOPE
              value: "postgres-auth"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PATRONI_POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-auth-secrets
                  key: admin_password
            - name: PATRONI_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-auth-secrets
                  key: replication_password
          ports:
            - containerPort: 5432
              name: postgresql
          livenessProbe:
            exec:
              command: [ "pg_isready", "-U", "postgres" ]
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command: [ "pg_isready", "-U", "postgres" ]
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            limits:
              cpu: "2"
              memory: "4Gi"
            requests:
              cpu: "500m"
              memory: "1Gi"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "ssd"
        resources:
          requests:
            storage: 20Gi

