services:
#SERVICES
  eureka-server:
    build:
      context: ./EurekaServer
      dockerfile: Dockerfile
    container_name: eureka-server
    hostname: eureka-server
    ports:
      - "8761:8761"
    networks:
      - marketplace-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    container_name: api-gateway
    hostname: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - marketplace-net
    environment:
      - JWT_SECRET=${JWT_SECRET}

  auth-service:
    build:
      context: ./AuthService
      dockerfile: Dockerfile
    container_name: auth-service
    hostname: auth-service
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - postgres-auth
      - kafka
    networks:
      - marketplace-net
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_NAME_AUTH}:5432/${POSTGRES_DB_AUTH}

  product-service:
    build:
      context: ./ProductService
      dockerfile: Dockerfile
    container_name: product-service
    hostname: product-service
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - postgres-product
      - auth-service
      - kafka
      - keydb-product
    networks:
      - marketplace-net
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_NAME_PRODUCT}:5432/${POSTGRES_DB_PRODUCT}

  payment-service:
    build:
      context: ./PaymentService
      dockerfile: Dockerfile
    container_name: payment-service
    hostname: payment-service
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - postgres-payment
      - auth-service
      - kafka
      - keydb-payment
    networks:
      - marketplace-net
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_NAME_PAYMENT}:5432/${POSTGRES_DB_PAYMENT}

  order-service:
    build:
      context: ./OrderService
      dockerfile: Dockerfile
    container_name: order-service
    hostname: order-service
    ports:
      - "8084:8084"
    depends_on:
      - eureka-server
      - postgres-order
      - auth-service
      - kafka
      - keydb-order
    networks:
      - marketplace-net
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${POSTGRES_NAME_ORDER}:5432/${POSTGRES_DB_ORDER}


  #POSTGRES
  postgres-auth:
    image: postgres:latest
    container_name: ${POSTGRES_NAME_AUTH}
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    networks:
      - marketplace-net


  postgres-product:
    image: postgres:latest
    container_name: ${POSTGRES_NAME_PRODUCT}
    environment:
        - POSTGRES_DB=product_db
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
    volumes:
        - postgres_product_data:/var/lib/postgresql/data
    networks:
        - marketplace-net

  postgres-payment:
    image: postgres:latest
    container_name: ${POSTGRES_NAME_PAYMENT}
    environment:
      - POSTGRES_DB=payment_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_payment_data:/var/lib/postgresql/data
    networks:
      - marketplace-net

  postgres-order:
    image: postgres:latest
    container_name: ${POSTGRES_NAME_ORDER}
    environment:
      - POSTGRES_DB=order_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_order_data:/var/lib/postgresql/data
    networks:
      - marketplace-net

#KEYDB
  keydb-product:
    image: eqalpha/keydb:latest
    container_name: keydb-product
    hostname: keydb-product
    ports:
      - "6380:6379"
    volumes:
      - keydb_product_data:/data
    networks:
      - marketplace-net
    command: keydb-server --appendonly yes --save "" --bind 0.0.0.0

  keydb-payment:
    image: eqalpha/keydb:latest
    container_name: keydb-payment
    hostname: keydb-payment
    ports:
      - "6381:6379"
    volumes:
      - keydb_payment_data:/data
    networks:
      - marketplace-net
    command: keydb-server --appendonly yes --save "" --bind 0.0.0.0

  keydb-order:
    image: eqalpha/keydb:latest
    container_name: keydb-order
    hostname: keydb-order
    ports:
      - "6382:6379"
    volumes:
      - keydb_order_data:/data
    networks:
      - marketplace-net
    command: keydb-server --appendonly yes --save "" --bind 0.0.0.0


#KAFKA
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    networks:
      - marketplace-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - marketplace-net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_EXT://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_EXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_EXT://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "7071:8080"
    depends_on:
      - kafka
    networks:
      - marketplace-net
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181


volumes:
  postgres_auth_data:
  postgres_product_data:
  postgres_payment_data:
  postgres_order_data:
  postgres_bank_account_data:
  keydb_product_data:
  keydb_payment_data:
  keydb_order_data:

networks:
  marketplace-net:
    name: marketplace-net
    driver: bridge
    external: true
